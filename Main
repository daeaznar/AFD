#include <iostream>
#include <iomanip>

using namespace std;

struct alfabeto_E { //nodo para alfabeto de entrada
    char simbolo;
    alfabeto_E *sig;
};

alfabeto_E *incio_e;
alfabeto_E *fin_e;
alfabeto_E *nuevo_e;
alfabeto_E *ptr_e;

struct alfabeto_S { //nodo para alfabeto de salida
    char simbolo;
    alfabeto_S *sig;
};

alfabeto_S *incio_s;
alfabeto_S *fin_s;
alfabeto_S *nuevo_s;
alfabeto_S *ptr_s;

void Header(); //Encabezado con datos que siempre se deben mostrar "estático"
void Alfabeto_E(); //Ingresar alfabeto de entrada
void Alfabeto_S(); //Ingresar alfabeto de salida

int total_afd = 0;
int afd_validos = 0;

int main() {
    int opc;
    do {
        cout << "Indique el tipo de Autómata Finito Determinista a registrar: " << endl;
        cout << "1. Traducción\n" << "2. Validación\n" << "3. Salir\n" << "Opción: ";
        cin>>opc;
        if (cin.fail()){
            cout << "---Opción inválida---\n" << endl;
            cin.clear();
            cin.ignore(1000, '\n');         //Para vaciar el buffer y pida de nuevo un cin
        }
        else {
            switch (opc) {
                case 1: Alfabeto_E();
                    break;
                case 2:
                    break;
                case 3: cout<<endl;
                    cout << "El total de AFDs Ingresados fue de: " << total_afd << endl;
                    cout << "El total de AFDs Válidos es de: " << afd_validos << endl;
                    cout << "El total de AFD's Inválidos es de: " << total_afd - afd_validos << endl;
                    cout << "\nGracias!... Cerrando sistema" << endl;
                    break;
                default: cout << "---Opción inválida---\n" << endl;
            }
        }
    } while (opc != 3);

    return 0;
}

void Header() {

}

void Alfabeto_E() {
    char simb;
    int ascii_simb = (int) simb;
    cout << "ascii: " << ascii_simb;
    cout << "Ingrese el alfabeto de entrada (seleccione '*' para terminar: " << endl;
    cin>>simb;
    while (true) {
        if (simb == '*')
            break;
        else
            break;
    }
}

void Alfabeto_S() {

}
